name: PHP Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [7.4, 8.0, 8.1, 8.2, 8.3]
        laravel-version: [6, 7, 8, 9, 10, 11]
        exclude:
          - php-version: 7.4
            laravel-version: 11
          - php-version: 8.0
            laravel-version: 11
          - php-version: 8.1
            laravel-version: 11

    name: PHP ${{ matrix.php-version }} with Laravel ${{ matrix.laravel-version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, curl, json, dom, filter, hash, pdo, pdo_sqlite
        coverage: xdebug

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-laravel-${{ matrix.laravel-version }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-laravel-${{ matrix.laravel-version }}-composer-
          ${{ runner.os }}-php-${{ matrix.php-version }}-composer-

    - name: Install dependencies
      run: |
        # Remove composer.lock to force fresh resolution for each PHP/Laravel combination
        rm -f composer.lock
        composer install --prefer-dist --no-progress --no-interaction

    - name: Run tests
      run: composer test

    - name: Generate coverage report
      if: matrix.php-version == '8.3' && matrix.laravel-version == '11'
      run: composer test-coverage

    - name: Upload coverage to Codecov
      if: matrix.php-version == '8.3' && matrix.laravel-version == '11'
      uses: codecov/codecov-action@v3
      with:
        file: coverage/coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: mbstring, xml, curl, json

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Run security audit
      run: composer audit

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: mbstring, xml, curl, json

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Run PHP CS Fixer
      run: |
        if [ -f vendor/bin/php-cs-fixer ]; then
          vendor/bin/php-cs-fixer fix --dry-run --diff --verbose
        else
          echo "PHP CS Fixer not installed, skipping..."
        fi

    - name: Run PHPStan
      run: |
        if [ -f vendor/bin/phpstan ]; then
          vendor/bin/phpstan analyse src --level=5
        else
          echo "PHPStan not installed, skipping..."
        fi
